'''
自定义模块中的功能测试
在编写完自定义的模块后,最好在编写的模块中对代码进行提前测试,防止代码在和别的模块中联动时产生异常

如何做:
在代码测试完毕后,但是不想将测试时使用的方法或者是函数等删除
但是又不想在导入该模块时的外部引入,需要使用以下的__name__方法

引入一个魔法方法:__name__,其中保存的内容是一个字符串类型的数据
关键字为__main__(和在使用python直接编写main函数的结果相同)
随着运行页面的不同,其返回的结果也是不同的:
如果__name__是在当前页面运行时,(意味着就是本模块运行本模块写的而不是使用import),其返回结果为__main__
如果__name__是在第三方页面导入运行时,其返回结果为模块名称
基于以上特性,可以把__name__编写在自定义模块中,语法如下:

if __name__ == '__main__':
    # 执行测试代码
    # 将测试的相关方法和自执行的方法等写在main函数中,可以避免写在main函数外被直接调用引发不同模块间调用的问题



对于不同模块中的方法重名问题可以使用as关键字进行重命名
'''
num =10
def sum(num1, num2):
    return num1 + num2

class Person(object):
    pass

# 打印输出魔术方法__name__,显示的是当前运行的入口
print(__name__)

# 测试代码
print('-'*40) # 差点弄错,注意对于字符串做乘法*实际上是对字符串进行赋值
print(num)
print(sum(10,80))
p1 = Person()
print(p1)
print('-'*40)